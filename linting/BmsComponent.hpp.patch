--- ./main/bms/BmsComponent.hpp	2021-02-26 11:58:53.706070320 +0100
+++ ./linting/BmsComponent.hpp	2021-02-26 13:38:46.254274321 +0100
@@ -41,37 +41,42 @@
     // {MKNXVEHCL0042M,
     //  {"MKNXVEHCL0042M", "BMS: Charging Active", "Robot is in Charging."}},
     {"MKNXVEHCL1500M",
-     {"MKNXVEHCL1500M", "Closing the Main Switch is not possible", "Contact Expert",
-      CompErrSev::FATAL}},
+     {"MKNXVEHCL1500M", "Closing the Main Switch is not possible",
+      "Contact Expert", CompErrSev::FATAL}},
     // {MKNXVEHCL1501M,
-    //  {"MKNXVEHCL1501M", "BMS: Timeout Error (No stay-alive bit)", "Contact Expert"}},
+    //  {"MKNXVEHCL1501M", "BMS: Timeout Error (No stay-alive bit)", "Contact
+    //  Expert"}},
     // {MKNXVEHCL1508M,
     //  {"MKNXVEHCL1508M", "BMS: Cell under-voltage error limit reached",
     //   "Contact Expert"}},
     // {MKNXVEHCL1514M,
-    //  {"MKNXVEHCL1514M", "BMS: Start-up test error occurred", "Contact Expert"}},
+    //  {"MKNXVEHCL1514M", "BMS: Start-up test error occurred", "Contact
+    //  Expert"}},
     // {MKNXVEHCL1516M,
-    //  {"MKNXVEHCL1516M", "BMS: Main Switch stuck detected", "Contact Expert"}},
+    //  {"MKNXVEHCL1516M", "BMS: Main Switch stuck detected", "Contact
+    //  Expert"}},
     // {TKNXVEHCL0041T,
     // {"TKNXVEHCL0041T", "BMS: Cell Under-Voltage Error",
-    //   "Inspect the battery. Charge the robot. Do not drive it. Contact an expert."}},
+    //   "Inspect the battery. Charge the robot. Do not drive it. Contact an
+    //   expert."}},
     {"MIDLBMSER0000M",
      {"MIDLBMSER0000M", "CAN interface not found in PC",
-      "Check the PEAK connection if any. Contact expert if no PEAK in the robot",
+      "Check the PEAK connection if any. Contact expert if no PEAK in the "
+      "robot",
       CompErrSev::FATAL}},
     {"MIDLBMSER0001M",
-     {"MIDLBMSER0001M", "An error occured resetting the CAN interface", "Contact expert",
-      CompErrSev::RECOVERABLE}},
+     {"MIDLBMSER0001M", "An error occured resetting the CAN interface",
+      "Contact expert", CompErrSev::RECOVERABLE}},
     {"MIDLBMSER0002M",
      {"MIDLBMSER0002M", "BMS not detected on CAN network",
       "Check the cable going from the BMS to the PC", CompErrSev::FATAL}},
     {"MIDLBMSER0004M",
-     {"MIDLBMSER0004M", "BMS switch switched off for no reason", "Contact expert",
-      CompErrSev::RECOVERABLE}},
+     {"MIDLBMSER0004M", "BMS switch switched off for no reason",
+      "Contact expert", CompErrSev::RECOVERABLE}},
 };
 
 class Bms : public isaac::alice::Codelet {
- public:
+public:
   void initialize() override;
   void start() override;
   void tick() override;
@@ -110,16 +115,17 @@
 
   void sendBatteryStateProto();
 
- private:
-  CanRecvHandler* recv_handler;
+private:
+  CanRecvHandler *recv_handler;
   using State = std::string;
   isaac::state_machine::StateMachine<State> machine_;
 
   std::string errorMessages;
 
-  int resetCounter; /**< Counter for how many tries are left when resetting the bms*/
-  double
-      transitionTickTime; /**< Variable holding the moment the state machine enters in init state*/
+  int resetCounter; /**< Counter for how many tries are left when resetting the
+                       bms*/
+  double transitionTickTime; /**< Variable holding the moment the state machine
+                                enters in init state*/
 
   isaac::Uuid last_request_uuid;
 
@@ -127,6 +133,6 @@
   void updateReceivedChannels();
 };
 
-}  // namespace str
+} // namespace str
 
 ISAAC_ALICE_REGISTER_CODELET(str::Bms);
\ No newline at end of file
